<base href="<c:url value ="http://kardhar.in/businessManagementSystem/"/>"/>

<link rel="stylesheet" href="<c:url value ="resources/bower_components/bootstrap/dist/css/bootstrap.min.css"/>">
<!-- Font Awesome -->
<link rel="stylesheet" href="<c:url value ="resources/bower_components/font-awesome/css/font-awesome.min.css"/>">
<!-- Ionicons -->
<link rel="stylesheet" href="<c:url value ="resources/bower_components/Ionicons/css/ionicons.min.css"/>">
<!-- DataTables -->
<link rel="stylesheet" href="<c:url value ="resources/bower_components/datatables.net-bs/css/dataTables.bootstrap.min.css"/>">
<!-- Theme style -->
<link rel="stylesheet" href="<c:url value ="resources/dist/css/AdminLTE.min.css"/>">
<!-- AdminLTE Skins. Choose a skin from the css/skins folder instead of downloading all of them to reduce the load. -->
<link rel="stylesheet" href="<c:url value ="resources/dist/css/skins/_all-skins.min.css"/>">
<!-- Select2 -->
<link rel="stylesheet" href="<c:url value ="resources/bower_components/select2/dist/css/select2.min.css"/>">

<link rel="stylesheet" href="<c:url value ="/resources/bower_components/morris.js/morris.css"/>">
<link rel="stylesheet" href="<c:url value ="/resources/bower_components/jvectormap/jquery-jvectormap.css"/>">
<link rel="stylesheet" href="<c:url value ="/resources/bower_components/bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css"/>">
<link rel="stylesheet" href="<c:url value ="/resources/bower_components/bootstrap-daterangepicker/daterangepicker.css"/>">
<link rel="stylesheet" href="<c:url value ="/resources/plugins/bootstrap-wysihtml5/bootstrap3-wysihtml5.min.css"/>">
<!-- iCheck -->
<link rel="stylesheet" href="<c:url value ="/resources/plugins/iCheck/square/blue.css"/>">
<!-- Google Font -->
<link rel="stylesheet" href="<c:url value ="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700,300italic,400italic,600italic"/>">

 <script type="text/javascript">
	
	var products = [] // declaring an empty array
	var i = 1;
	var totalAmount = 0;
	products = products;
	
	function callController() {
		getElementsById();
		
		console.log("===> function callController");
		
		$.ajax({
			type : 'POST',
			dataType : 'html',
			contentType : 'application/json',
			url : "insertSales",
			data : JSON.stringify(products),
			success : function() {
				console.log("===> function callController Success");
			},
			error : function(xhr, textStatus, errorThrown) {
				console.log("===> function callController Error");
				console.log("xhr:" + xhr);
				console.log("textStatus:" + textStatus);
				console.log("errorThrown:" + errorThrown);
			},
			complete : function() {
				console.log("===> function callController completed");
				window.location.href = "viewUsers";
			}
		});
	};

	function Add() {
		console.log("===> function Add");
		AddRow(i, $("#product").val(), $("#quantity").val(), $("#rate").val(),
				$("#description").val(), $("#bags").val(), $("#less").val());
		$("#id").val("");
		$("#product").val("");
		$("#quantity").val("");
		$("#bags").val("");
		$("#less").val("");
		$("#rate").val("");
		$("#description").val("");
		$("#ntWt").val("");
		$("#total").val("");
		console.log("<=== function Add");
	};

	function AddElementsToArray(id, product, quantity, rate, description, bags, less){
		console.log("===> function AddRow");
		var productDetails = {
			"id" : id,
			"product" : product,
			"quantity" : quantity,
			"rate" : rate,
			"description" : description,
			"bags" : bags,
			"less" : less
		}
		products.push(productDetails);
		console.log("===> function AddRow Added to Sales Array");
	}
	
	function AddRow(id, product, quantity, rate, description, bags, less) {
		
		AddElementsToArray(id, product, quantity, rate, description, bags, less);
		
		//TODO:delete below  comments
		/* console.log("===> function AddRow");
		var productDetails = {
			"id" : id,
			"product" : product,
			"quantity" : quantity,
			"rate" : rate,
			"description" : description,
			"bags" : bags,
			"less" : less
		}
		products.push(productDetails);
		console.log("===> function AddRow Added to Sales Array"); */
		
		//Get the reference of the Table's TBODY element.
		i++;
		var tBody = $("#tblCustomers > TBODY")[0];

		//Add Row.
		row = tBody.insertRow(-1);

		//Add srNo cell.
		var cell = $(row.insertCell(-1));
		cell.html(id);

		//Add product cell.
		cell = $(row.insertCell(-1));
		cell.html(product);

		//Add quantity cell.
		cell = $(row.insertCell(-1));
		cell.html(quantity);

		//Add bags cell.
		cell = $(row.insertCell(-1));
		cell.html(bags);

		//Add less cell.
		cell = $(row.insertCell(-1));
		cell.html(less);

		//Add rate cell.
		cell = $(row.insertCell(-1));
		cell.html(rate);

		//Add description cell.
		cell = $(row.insertCell(-1));
		cell.html(description);

		//Add ntWt cell.
		cell = $(row.insertCell(-1));
		cell.html(quantity - less);

		//Add total cell.
		cell = $(row.insertCell(-1));
		cell.html((quantity - less) * rate);

		//Add Button cell.
		cell = $(row.insertCell(-1));
		var btnRemove = $("<input />");
		btnRemove.attr("type", "button");
		btnRemove.attr("onclick", "Remove(this, id);");
		btnRemove.val("x");
		cell.append(btnRemove);
		
		totalAmount += (quantity - less) * rate;
		
		$("#tamount").val(totalAmount);
		
		console.log("<=== function AddRow");
	};

	function Remove(button) {
 		console.log("===> function Remove");
		//Determine the reference of the Row using the Button.
		var row = $(button).closest("TR");

		var name = $("TD", row).eq(0).html();

		//retriving the cell value from the row reference
		var rowID = row[0].cells[0].innerHTML;
		var pcode = row[0].cells[1].innerHTML;
		var pqty = row[0].cells[2].innerHTML;
		var pbags = row[0].cells[3].innerHTML;
		var pless = row[0].cells[4].innerHTML;
		var prate = row[0].cells[5].innerHTML;
		
		console.log("rowID:"+rowID +" pcode:"+ pcode +" pqty:"+ pqty +" pbags:"+ pbags +" pless:"+ pless +" prate:"+ prate);

		if (confirm("Confirm delete row with Id: " + rowID)) {

			//Get the reference of the Table.
			var table = $("#tblCustomers")[0];

			//subtracting current row total from total amount
			totalAmount = totalAmount - ((pqty - pless) * prate);
			$("#tamount").val(totalAmount);
			
			// function to remove the element from the array
			removeElementFromArrary(rowID)

			//Delete the Table row using it's Index.
			table.deleteRow(row[0].rowIndex);
		}
		console.log("<===  function Remove");
	};

	function removeElementFromArrary(row) {
		console.log('====> removeElement')
		for (elementIdx in products) {
			console.log('Object.keys(Sales.products[elementIdx]): '
					+ Object.keys(products[elementIdx]))
			var key = Object.keys(products[elementIdx])[0]
			console.log('Sales.products[x][key]: ' + products[elementIdx][key])
			var id = products[elementIdx][key]
			if (id == row) {
				console.log('Deleting Row Id: ' + id)
				products.splice(elementIdx, 1);
				break;
			}
		}
		console.log("JSON.stringify(products): " + JSON.stringify(products));
	}

	function getElementsById() {
		var details = {
			"customerId" : document.getElementById('customerId').value,
			"date" : document.getElementById('date').value,
			"totalAmount" : document.getElementById('tamount').value,
			"comment" : document.getElementById('comment').value,
			"type" : "SALES",
			"mode" : "CASH",
			"payment" : 0
		}
		products.push(details);
		console.log('Printing products Json in getElementsById');
		console.log(JSON.stringify(products));
	}
</script>
